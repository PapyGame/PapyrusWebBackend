# *****************************************************************************
# * Copyright (c) 2023, 2024 CEA LIST, Obeo.
# *
# * All rights reserved. This program and the accompanying materials
# * are made available under the terms of the Eclipse Public License 2.0
# * which accompanies this distribution, and is available at
# * https://www.eclipse.org/legal/epl-2.0/
# *
# * SPDX-License-Identifier: EPL-2.0
# *
# * Contributors:
# *  Obeo - Initial API and implementation
# *****************************************************************************

type LanguageExpression implements Widget {
	id: ID!
	label: String!
	iconURL: [String!]!
	diagnostics: [Diagnostic!]!
	hasHelpText: Boolean!
	readOnly: Boolean!
	languages: [LanguageElement!]!
	predefinedLanguages: [String!]!
}

type LanguageElement {
	id: ID!
	label: String!
	body: String!
}

extend type Mutation {
	addLanguage(input: AddLanguageInput!): AddLanguagePayload!
	deleteLanguage(input: DeleteLanguageInput!): DeleteLanguagePayload!
	editLanguageBody(input: EditLanguageBodyInput!): EditLanguageBodyPayload!
	moveLanguage(input: MoveLanguageInput!): MoveLanguagePayload!
}

input AddLanguageInput {
	id: ID!
	editingContextId: ID!
	representationId: ID!
	languageExpressionId: ID!
	language: String!
}

union AddLanguagePayload = SuccessPayload | ErrorPayload

input DeleteLanguageInput {
	id: ID!
	editingContextId: ID!
	representationId: ID!
	languageExpressionId: ID!
	language: String!
}

union DeleteLanguagePayload = SuccessPayload | ErrorPayload

input EditLanguageBodyInput {
	id: ID!
	editingContextId: ID!
	representationId: ID!
	languageExpressionId: ID!
	language: String!
	newBody: String!
}

union EditLanguageBodyPayload = SuccessPayload | ErrorPayload

input MoveLanguageInput {
	id: ID!
	editingContextId: ID!
	representationId: ID!
	languageExpressionId: ID!
	language: String!
	direction: MoveLanguageDirection!
}

enum MoveLanguageDirection {
  BACKWARD
  FORWARD
}

union MoveLanguagePayload = SuccessPayload | ErrorPayload
