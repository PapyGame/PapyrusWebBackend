/**
 * Copyright (c) 2023, 2024 CEA LIST, Obeo.
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under
 * the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 * Obeo - Initial API and implementation
 */
package org.eclipse.papyrus.web.custom.widgets.papyruswidgets.provider;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.papyrus.web.custom.widgets.PapyrusWebCustomWidgetsEditPlugin;
import org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PapyrusWidgetsFactory;
import org.eclipse.papyrus.web.custom.widgets.papyruswidgets.util.PapyrusWidgetsAdapterFactory;
import org.eclipse.sirius.components.view.form.FlexboxContainerDescription;
import org.eclipse.sirius.components.view.form.FormElementFor;
import org.eclipse.sirius.components.view.form.FormElementIf;
import org.eclipse.sirius.components.view.form.FormPackage;
import org.eclipse.sirius.components.view.form.GroupDescription;
import org.eclipse.sirius.components.view.form.util.FormSwitch;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers. The adapters generated by this
 * factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}. The adapters
 * also support Eclipse property sheets. Note that most of the adapters are shared among multiple instances. <!--
 * begin-user-doc --> <!-- end-user-doc -->
 *
 * @generated
 */
public class PapyrusWidgetsItemProviderAdapterFactory extends PapyrusWidgetsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this adapter factory. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<>();

    /**
     * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    public PapyrusWidgetsItemProviderAdapterFactory() {
        this.supportedTypes.add(IEditingDomainItemProvider.class);
        this.supportedTypes.add(IStructuredItemContentProvider.class);
        this.supportedTypes.add(ITreeItemContentProvider.class);
        this.supportedTypes.add(IItemLabelProvider.class);
        this.supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.LanguageExpressionWidgetDescription} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected LanguageExpressionWidgetDescriptionItemProvider languageExpressionWidgetDescriptionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.LanguageExpressionWidgetDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLanguageExpressionWidgetDescriptionAdapter() {
        if (this.languageExpressionWidgetDescriptionItemProvider == null) {
            this.languageExpressionWidgetDescriptionItemProvider = new LanguageExpressionWidgetDescriptionItemProvider(this);
        }

        return this.languageExpressionWidgetDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveRadioWidgetDescription} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PrimitiveRadioWidgetDescriptionItemProvider primitiveRadioWidgetDescriptionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveRadioWidgetDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPrimitiveRadioWidgetDescriptionAdapter() {
        if (this.primitiveRadioWidgetDescriptionItemProvider == null) {
            this.primitiveRadioWidgetDescriptionItemProvider = new PrimitiveRadioWidgetDescriptionItemProvider(this);
        }

        return this.primitiveRadioWidgetDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListWidgetDescription} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PrimitiveListWidgetDescriptionItemProvider primitiveListWidgetDescriptionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListWidgetDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPrimitiveListWidgetDescriptionAdapter() {
        if (this.primitiveListWidgetDescriptionItemProvider == null) {
            this.primitiveListWidgetDescriptionItemProvider = new PrimitiveListWidgetDescriptionItemProvider(this);
        }

        return this.primitiveListWidgetDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListDeleteOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PrimitiveListDeleteOperationItemProvider primitiveListDeleteOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListDeleteOperation}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPrimitiveListDeleteOperationAdapter() {
        if (this.primitiveListDeleteOperationItemProvider == null) {
            this.primitiveListDeleteOperationItemProvider = new PrimitiveListDeleteOperationItemProvider(this);
        }

        return this.primitiveListDeleteOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListAddOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PrimitiveListAddOperationItemProvider primitiveListAddOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListAddOperation}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPrimitiveListAddOperationAdapter() {
        if (this.primitiveListAddOperationItemProvider == null) {
            this.primitiveListAddOperationItemProvider = new PrimitiveListAddOperationItemProvider(this);
        }

        return this.primitiveListAddOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListReorderOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PrimitiveListReorderOperationItemProvider primitiveListReorderOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListReorderOperation}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPrimitiveListReorderOperationAdapter() {
        if (this.primitiveListReorderOperationItemProvider == null) {
            this.primitiveListReorderOperationItemProvider = new PrimitiveListReorderOperationItemProvider(this);
        }

        return this.primitiveListReorderOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListItemActionOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PrimitiveListItemActionOperationItemProvider primitiveListItemActionOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.PrimitiveListItemActionOperation}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPrimitiveListItemActionOperationAdapter() {
        if (this.primitiveListItemActionOperationItemProvider == null) {
            this.primitiveListItemActionOperationItemProvider = new PrimitiveListItemActionOperationItemProvider(this);
        }

        return this.primitiveListItemActionOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MonoReferenceWidgetDescription} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MonoReferenceWidgetDescriptionItemProvider monoReferenceWidgetDescriptionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MonoReferenceWidgetDescription}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMonoReferenceWidgetDescriptionAdapter() {
        if (this.monoReferenceWidgetDescriptionItemProvider == null) {
            this.monoReferenceWidgetDescriptionItemProvider = new MonoReferenceWidgetDescriptionItemProvider(this);
        }

        return this.monoReferenceWidgetDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceWidgetDescription} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MultiReferenceWidgetDescriptionItemProvider multiReferenceWidgetDescriptionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceWidgetDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMultiReferenceWidgetDescriptionAdapter() {
        if (this.multiReferenceWidgetDescriptionItemProvider == null) {
            this.multiReferenceWidgetDescriptionItemProvider = new MultiReferenceWidgetDescriptionItemProvider(this);
        }

        return this.multiReferenceWidgetDescriptionItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MonoReferenceSetOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MonoReferenceSetOperationItemProvider monoReferenceSetOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MonoReferenceSetOperation}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMonoReferenceSetOperationAdapter() {
        if (this.monoReferenceSetOperationItemProvider == null) {
            this.monoReferenceSetOperationItemProvider = new MonoReferenceSetOperationItemProvider(this);
        }

        return this.monoReferenceSetOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MonoReferenceUnsetOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MonoReferenceUnsetOperationItemProvider monoReferenceUnsetOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MonoReferenceUnsetOperation}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMonoReferenceUnsetOperationAdapter() {
        if (this.monoReferenceUnsetOperationItemProvider == null) {
            this.monoReferenceUnsetOperationItemProvider = new MonoReferenceUnsetOperationItemProvider(this);
        }

        return this.monoReferenceUnsetOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.CreateElementInReferenceOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected CreateElementInReferenceOperationItemProvider createElementInReferenceOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.CreateElementInReferenceOperation}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createCreateElementInReferenceOperationAdapter() {
        if (this.createElementInReferenceOperationItemProvider == null) {
            this.createElementInReferenceOperationItemProvider = new CreateElementInReferenceOperationItemProvider(this);
        }

        return this.createElementInReferenceOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.ClickReferenceValueOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ClickReferenceValueOperationItemProvider clickReferenceValueOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.ClickReferenceValueOperation}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createClickReferenceValueOperationAdapter() {
        if (this.clickReferenceValueOperationItemProvider == null) {
            this.clickReferenceValueOperationItemProvider = new ClickReferenceValueOperationItemProvider(this);
        }

        return this.clickReferenceValueOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceAddOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MultiReferenceAddOperationItemProvider multiReferenceAddOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceAddOperation}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMultiReferenceAddOperationAdapter() {
        if (this.multiReferenceAddOperationItemProvider == null) {
            this.multiReferenceAddOperationItemProvider = new MultiReferenceAddOperationItemProvider(this);
        }

        return this.multiReferenceAddOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceRemoveOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MultiReferenceRemoveOperationItemProvider multiReferenceRemoveOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceRemoveOperation}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMultiReferenceRemoveOperationAdapter() {
        if (this.multiReferenceRemoveOperationItemProvider == null) {
            this.multiReferenceRemoveOperationItemProvider = new MultiReferenceRemoveOperationItemProvider(this);
        }

        return this.multiReferenceRemoveOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.ClearReferenceOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ClearReferenceOperationItemProvider clearReferenceOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.ClearReferenceOperation}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createClearReferenceOperationAdapter() {
        if (this.clearReferenceOperationItemProvider == null) {
            this.clearReferenceOperationItemProvider = new ClearReferenceOperationItemProvider(this);
        }

        return this.clearReferenceOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceReorderOperation} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MultiReferenceReorderOperationItemProvider multiReferenceReorderOperationItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.MultiReferenceReorderOperation}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMultiReferenceReorderOperationAdapter() {
        if (this.multiReferenceReorderOperationItemProvider == null) {
            this.multiReferenceReorderOperationItemProvider = new MultiReferenceReorderOperationItemProvider(this);
        }

        return this.multiReferenceReorderOperationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.ContainmentReferenceWidgetDescription} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ContainmentReferenceWidgetDescriptionItemProvider containmentReferenceWidgetDescriptionItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.papyrus.web.custom.widgets.papyruswidgets.ContainmentReferenceWidgetDescription}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createContainmentReferenceWidgetDescriptionAdapter() {
        if (this.containmentReferenceWidgetDescriptionItemProvider == null) {
            this.containmentReferenceWidgetDescriptionItemProvider = new ContainmentReferenceWidgetDescriptionItemProvider(this);
        }

        return this.containmentReferenceWidgetDescriptionItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return this.parentAdapterFactory == null ? this : this.parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return this.supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the adapter. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (this.isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void addListener(INotifyChangedListener notifyChangedListener) {
        this.changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        this.changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    @Override
    public void fireNotifyChanged(Notification notification) {
        this.changeNotifier.fireNotifyChanged(notification);

        if (this.parentAdapterFactory != null) {
            this.parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void dispose() {
        if (this.languageExpressionWidgetDescriptionItemProvider != null)
            this.languageExpressionWidgetDescriptionItemProvider.dispose();
        if (this.primitiveRadioWidgetDescriptionItemProvider != null)
            this.primitiveRadioWidgetDescriptionItemProvider.dispose();
        if (this.primitiveListWidgetDescriptionItemProvider != null)
            this.primitiveListWidgetDescriptionItemProvider.dispose();
        if (this.primitiveListDeleteOperationItemProvider != null)
            this.primitiveListDeleteOperationItemProvider.dispose();
        if (this.primitiveListAddOperationItemProvider != null)
            this.primitiveListAddOperationItemProvider.dispose();
        if (this.primitiveListReorderOperationItemProvider != null)
            this.primitiveListReorderOperationItemProvider.dispose();
        if (this.primitiveListItemActionOperationItemProvider != null)
            this.primitiveListItemActionOperationItemProvider.dispose();
        if (this.monoReferenceWidgetDescriptionItemProvider != null)
            this.monoReferenceWidgetDescriptionItemProvider.dispose();
        if (this.multiReferenceWidgetDescriptionItemProvider != null)
            this.multiReferenceWidgetDescriptionItemProvider.dispose();
        if (this.monoReferenceSetOperationItemProvider != null)
            this.monoReferenceSetOperationItemProvider.dispose();
        if (this.monoReferenceUnsetOperationItemProvider != null)
            this.monoReferenceUnsetOperationItemProvider.dispose();
        if (this.createElementInReferenceOperationItemProvider != null)
            this.createElementInReferenceOperationItemProvider.dispose();
        if (this.clickReferenceValueOperationItemProvider != null)
            this.clickReferenceValueOperationItemProvider.dispose();
        if (this.multiReferenceAddOperationItemProvider != null)
            this.multiReferenceAddOperationItemProvider.dispose();
        if (this.multiReferenceRemoveOperationItemProvider != null)
            this.multiReferenceRemoveOperationItemProvider.dispose();
        if (this.clearReferenceOperationItemProvider != null)
            this.clearReferenceOperationItemProvider.dispose();
        if (this.multiReferenceReorderOperationItemProvider != null)
            this.multiReferenceReorderOperationItemProvider.dispose();
        if (this.containmentReferenceWidgetDescriptionItemProvider != null)
            this.containmentReferenceWidgetDescriptionItemProvider.dispose();
    }

    /**
     * A child creation extender for the {@link FormPackage}. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    public static class FormChildCreationExtender implements IChildCreationExtender {
        /**
         * The switch for creating child descriptors specific to each extended class. <!-- begin-user-doc --> <!--
         * end-user-doc -->
         *
         * @generated
         */
        protected static class CreationSwitch extends FormSwitch<Object> {
            /**
             * The child descriptors being populated. <!-- begin-user-doc --> <!-- end-user-doc -->
             *
             * @generated
             */
            protected List<Object> newChildDescriptors;

            /**
             * The domain in which to create the children. <!-- begin-user-doc --> <!-- end-user-doc -->
             *
             * @generated
             */
            protected EditingDomain editingDomain;

            /**
             * Creates the a switch for populating child descriptors in the given domain. <!-- begin-user-doc --> <!--
             * end-user-doc -->
             *
             * @generated
             */
            CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
                this.newChildDescriptors = newChildDescriptors;
                this.editingDomain = editingDomain;
            }

            /**
             * <!-- begin-user-doc --> <!-- end-user-doc -->
             *
             * @generated
             */
            @Override
            public Object caseGroupDescription(GroupDescription object) {
                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.GROUP_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createLanguageExpressionWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.GROUP_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveRadioWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.GROUP_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveListWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.GROUP_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMonoReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.GROUP_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMultiReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.GROUP_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createContainmentReferenceWidgetDescription()));

                return null;
            }

            /**
             * <!-- begin-user-doc --> <!-- end-user-doc -->
             *
             * @generated
             */
            @Override
            public Object caseFlexboxContainerDescription(FlexboxContainerDescription object) {
                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FLEXBOX_CONTAINER_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createLanguageExpressionWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FLEXBOX_CONTAINER_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveRadioWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FLEXBOX_CONTAINER_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveListWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FLEXBOX_CONTAINER_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMonoReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FLEXBOX_CONTAINER_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMultiReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FLEXBOX_CONTAINER_DESCRIPTION__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createContainmentReferenceWidgetDescription()));

                return null;
            }

            /**
             * <!-- begin-user-doc --> <!-- end-user-doc -->
             *
             * @generated
             */
            @Override
            public Object caseFormElementFor(FormElementFor object) {
                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_FOR__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createLanguageExpressionWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_FOR__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveRadioWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_FOR__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveListWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_FOR__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMonoReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_FOR__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMultiReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_FOR__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createContainmentReferenceWidgetDescription()));

                return null;
            }

            /**
             * <!-- begin-user-doc --> <!-- end-user-doc -->
             *
             * @generated
             */
            @Override
            public Object caseFormElementIf(FormElementIf object) {
                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_IF__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createLanguageExpressionWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_IF__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveRadioWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_IF__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createPrimitiveListWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_IF__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMonoReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_IF__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createMultiReferenceWidgetDescription()));

                this.newChildDescriptors.add(this.createChildParameter(FormPackage.Literals.FORM_ELEMENT_IF__CHILDREN,
                        PapyrusWidgetsFactory.eINSTANCE.createContainmentReferenceWidgetDescription()));

                return null;
            }

            /**
             * <!-- begin-user-doc --> <!-- end-user-doc -->
             *
             * @generated
             */
            protected CommandParameter createChildParameter(Object feature, Object child) {
                return new CommandParameter(null, feature, child);
            }

        }

        /**
         * <!-- begin-user-doc --> <!-- end-user-doc -->
         *
         * @generated
         */
        @Override
        public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
            ArrayList<Object> result = new ArrayList<>();
            new CreationSwitch(result, editingDomain).doSwitch((EObject) object);
            return result;
        }

        /**
         * <!-- begin-user-doc --> <!-- end-user-doc -->
         *
         * @generated
         */
        @Override
        public ResourceLocator getResourceLocator() {
            return PapyrusWebCustomWidgetsEditPlugin.INSTANCE;
        }
    }

}
